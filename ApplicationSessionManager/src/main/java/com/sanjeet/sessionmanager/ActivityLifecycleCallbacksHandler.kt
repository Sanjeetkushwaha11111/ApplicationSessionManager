package com.sanjeet.sessionmanagerimport android.app.Activityimport android.app.Applicationimport android.os.Bundleimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.launchimport timber.log.Timberclass ActivityLifecycleCallbacksHandler(    private val sessionManager: SessionManager,    private val lifecycleScope: CoroutineScope) : Application.ActivityLifecycleCallbacks {    private var activityReferences = 0    private var isActivityChangingConfigurations = false    override fun onActivityCreated(activity: Activity, savedInstanceState: Bundle?) {}    override fun onActivitySaveInstanceState(activity: Activity, outState: Bundle) {}    override fun onActivityDestroyed(activity: Activity) {}    override fun onActivityResumed(activity: Activity) {}    override fun onActivityPaused(activity: Activity) {}    override fun onActivityStarted(activity: Activity) {        if (++activityReferences == 1 && !isActivityChangingConfigurations) {            Timber.e(">>>>>>>>>>>>New App Start")            sessionManager.startSession()        }    }    override fun onActivityStopped(activity: Activity) {        isActivityChangingConfigurations = activity.isChangingConfigurations        if (--activityReferences == 0 && !isActivityChangingConfigurations) {            Timber.e(">>>>>>>>>>>>New App closed")            lifecycleScope.launch {                sessionManager.endSession(lifecycleScope)            }        }    }}